on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Create Release

jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Let us zip up only changed files 
        run: |
           echo "GitHub Commit ID of last commit ${{ github.sha}}"
           git diff-tree --no-commit-id --name-only -r ${{ github.sha}}
           git diff-tree --no-commit-id --name-only -r ${{ github.sha}} >> file_list.txt
           mkdir Released_Files
           for file in $(<file_list.txt); do cp "$file" Released_Files; done
           echo "Released Files"
           ls Released_Files
           zip -r Released_Files.zip Released_Files
           ls *.zip
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Changes in this Release
            - First Change
            - Second Change
          draft: false
          prerelease: false
      
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: Released_Files.zip
          asset_name: Released_Files.zip
          asset_content_type: application/zip
